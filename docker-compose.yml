services:
  # Web Server (Nginx)
  web:
    build: ./web-server
    ports:
      - '8080:80'
    networks:
      - security_network

  # Database (PostgreSQL)
  db:
    build: ./database
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - '5432:5432'
    networks:
      - security_network

  # Client machine
  client:
    build: ./client
    networks:
      - security_network
    depends_on:
      - web
      - db

  # Suricata IDS
  suricata:
    build: ./suricata
    network_mode: 'host'
    cap_add:
      - NET_ADMIN
      - SYS_NICE
      - NET_RAW
      - IPC_LOCK
    volumes:
      - ./suricata/logs:/var/log/suricata
    environment:
      - SURICATA_OPTIONS="-i eth0"
    security_opt:
      - seccomp:unconfined
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # ELK Stack
  elasticsearch:
    build: ./elk/elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
    networks:
      - security_network
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ['CMD-SHELL', 'curl -s http://localhost:9200 >/dev/null || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  logstash:
    build: ./elk/logstash
    ports:
      - '5044:5044'
    networks:
      - security_network
    depends_on:
      - elasticsearch

  kibana:
    build: ./elk/kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - '5601:5601'
    networks:
      - security_network
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

networks:
  security_network:
    driver: bridge

volumes:
  es_data:
  db_data:
